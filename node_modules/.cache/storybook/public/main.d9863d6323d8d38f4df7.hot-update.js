webpackHotUpdate("main",{

/***/ "./src/components/Button/StyledButton.tsx":
/*!************************************************!*\
  !*** ./src/components/Button/StyledButton.tsx ***!
  \************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _Users_liammulvaney_Documents_projects_blockchain_meow_meow_toolkit_meow_node_modules_core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! /Users/liammulvaney/Documents/projects/blockchain/meow/meow-toolkit/meow/node_modules/core-js/modules/es.array.concat.js */ "../../node_modules/core-js/modules/es.array.concat.js");
/* harmony import */ var _Users_liammulvaney_Documents_projects_blockchain_meow_meow_toolkit_meow_node_modules_core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_liammulvaney_Documents_projects_blockchain_meow_meow_toolkit_meow_node_modules_core_js_modules_es_array_concat_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-components */ "../../node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var styled_system__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! styled-system */ "../../node_modules/styled-system/dist/index.esm.js");
/* harmony import */ var _theme__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./theme */ "./src/components/Button/theme.ts");
/* harmony import */ var _theme_colors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../theme/colors */ "./src/theme/colors.ts");






var getDisabledStyles = function getDisabledStyles(_ref) {
  var $isLoading = _ref.$isLoading,
      theme = _ref.theme;

  if ($isLoading === true) {
    return "\n      &:disabled,\n      &.pancake-button--disabled {\n        cursor: not-allowed;\n      }\n    ";
  }

  return "\n    &:disabled,\n    &.pancake-button--disabled {\n      background-color: ".concat(theme.colors.backgroundDisabled, ";\n      border-color: ").concat(theme.colors.backgroundDisabled, ";\n      transform: initial!important;\n      box-shadow: none!important;\n      > div {\n        color: ").concat(theme.colors.textDisabled, ";\n      }\n      cursor: not-allowed;\n    }\n\n    &:disabled,\n    &.pancake-button--disabled, .pancake-button--disabled&:hover {\n      transform: initial!important;\n      box-shadow: none!important;\n      cursor: not-allowed;\n    }\n  ");
};
/**
 * This is to get around an issue where if you use a Link component
 * React will throw a invalid DOM attribute error
 * @see https://github.com/styled-components/styled-components/issues/135
 */


var getOpacity = function getOpacity(_ref2) {
  var $isLoading = _ref2.$isLoading;
  return $isLoading ? ".5" : "1";
};

var StyledButton = styled_components__WEBPACK_IMPORTED_MODULE_1__["default"].button.withConfig({
  displayName: "StyledButton",
  componentId: "wxygd-0"
})(["align-items:center;border:0;border-radius:.5rem;cursor:pointer;display:inline-flex;font-family:inherit;font-size:16px;font-weight:600;justify-content:center;letter-spacing:0.03em;line-height:1;opacity:", ";outline:0;width:", ";", " ", " ", " ", " ", " ", " ", ""], getOpacity, function (props) {
  return props.fullWidth ? '100%' : undefined;
}, getDisabledStyles, Object(styled_system__WEBPACK_IMPORTED_MODULE_2__[/* variant */ "i"])({
  prop: "scale",
  variants: _theme__WEBPACK_IMPORTED_MODULE_3__[/* scaleVariants */ "a"]
}), Object(styled_system__WEBPACK_IMPORTED_MODULE_2__[/* variant */ "i"])({
  variants: _theme__WEBPACK_IMPORTED_MODULE_3__[/* styleVariants */ "b"]
}), styled_system__WEBPACK_IMPORTED_MODULE_2__[/* layout */ "e"], styled_system__WEBPACK_IMPORTED_MODULE_2__[/* space */ "g"], function (props) {
  return props.isButtonMenu && props.isSelected && props.variant === 'primary' && "\n    :hover {\n      transform: none!important;\n      box-shadow: 0 .2rem 0 0 ".concat(_theme_colors__WEBPACK_IMPORTED_MODULE_4__[/* baseColors */ "a"].primaryBorder, "!important;\n    }\n\n    :focus {\n      transform: translateY(0rem);\n      box-shadow: 0 0rem 0 0 #c13da8!important  ;\n    }\n  ");
}, function (props) {
  return props.hideBorder && "\n    border: 0px;\n  ";
});
/* harmony default export */ __webpack_exports__["a"] = (StyledButton);

try {
    // @ts-ignore
    StyledButton.displayName = "StyledButton";
    // @ts-ignore
    StyledButton.__docgenInfo = { "description": "", "displayName": "StyledButton", "props": { "ref": { "defaultValue": null, "description": "", "name": "ref", "required": false, "type": { "name": "((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null" } }, "scale": { "defaultValue": null, "description": "", "name": "scale", "required": false, "type": { "name": "enum", "value": [{ "value": "undefined" }, { "value": "\"md\"" }, { "value": "\"ms\"" }, { "value": "\"sm\"" }, { "value": "\"xs\"" }] } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "undefined" } }, "external": { "defaultValue": null, "description": "", "name": "external", "required": false, "type": { "name": "boolean" } }, "isLoading": { "defaultValue": null, "description": "", "name": "isLoading", "required": false, "type": { "name": "boolean" } }, "variant": { "defaultValue": null, "description": "", "name": "variant", "required": false, "type": { "name": "enum", "value": [{ "value": "undefined" }, { "value": "\"text\"" }, { "value": "\"primary\"" }, { "value": "\"secondary\"" }, { "value": "\"tertiary\"" }, { "value": "\"palePrimary\"" }, { "value": "\"danger\"" }, { "value": "\"subtle\"" }, { "value": "\"success\"" }] } }, "startIcon": { "defaultValue": null, "description": "", "name": "startIcon", "required": false, "type": { "name": "ReactNode" } }, "endIcon": { "defaultValue": null, "description": "", "name": "endIcon", "required": false, "type": { "name": "ReactNode" } }, "fullWidth": { "defaultValue": null, "description": "", "name": "fullWidth", "required": false, "type": { "name": "boolean" } }, "isSelected": { "defaultValue": null, "description": "", "name": "isSelected", "required": false, "type": { "name": "boolean" } }, "isButtonMenu": { "defaultValue": null, "description": "", "name": "isButtonMenu", "required": false, "type": { "name": "boolean" } }, "hideBorder": { "defaultValue": null, "description": "", "name": "hideBorder", "required": false, "type": { "name": "boolean" } }, "theme": { "defaultValue": null, "description": "", "name": "theme", "required": false, "type": { "name": "any" } }, "forwardedAs": { "defaultValue": null, "description": "", "name": "forwardedAs", "required": false, "type": { "name": "undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/Button/StyledButton.tsx#StyledButton"] = { docgenInfo: StyledButton.__docgenInfo, name: "StyledButton", path: "src/components/Button/StyledButton.tsx#StyledButton" };
}
catch (__react_docgen_typescript_loader_error) { }


/***/ })

})
//# sourceMappingURL=main.d9863d6323d8d38f4df7.hot-update.js.map