{"version":3,"file":"main.7e51a4eb444b1f9cb95e.hot-update.js","sources":["webpack:///./src/components/Toggle/StyledToggle.tsx"],"sourcesContent":["import styled, { DefaultTheme } from \"styled-components\";\nimport { scales } from \"../Checkbox/types\";\nimport { ToggleProps, HandleProps, InputProps, ScaleKeys } from \"./types\";\n\nconst scaleKeyValues = {\n  sm: {\n    handleHeight: \"16px\",\n    handleWidth: \"16px\",\n    handleLeft: \"2px\",\n    handleTop: \"2px\",\n    checkedLeft: \"calc(100% - 18px)\",\n    toggleHeight: \"20px\",\n    toggleWidth: \"36px\",\n  },\n  ms: {\n    handleHeight: \"24px\",\n    handleWidth: \"24px\",\n    handleLeft: \"2px\",\n    handleTop: \"2px\",\n    checkedLeft: \"calc(100% - 26px)\",\n    toggleHeight: \"28px\",\n    toggleWidth: \"50px\",\n  },\n  md: {\n    handleHeight: \"32px\",\n    handleWidth: \"32px\",\n    handleLeft: \"4px\",\n    handleTop: \"4px\",\n    checkedLeft: \"calc(100% - 36px)\",\n    toggleHeight: \"40px\",\n    toggleWidth: \"72px\",\n  },\n};\n\nconst getScale =\n  (property: ScaleKeys) =>\n  ({ scale = scales.MD }: ToggleProps) => {\n    return scaleKeyValues[scale][property];\n  };\n\nexport const Handle = styled.div<HandleProps>`\n  background-color: #fff;\n  border-radius: 50%;\n  cursor: pointer;\n  height: ${getScale(\"handleHeight\")};\n  left: ${getScale(\"handleLeft\")};\n  position: absolute;\n  top: ${getScale(\"handleTop\")};\n  transition: left 200ms ease-in;\n  width: ${getScale(\"handleWidth\")};\n  z-index: 1;\n`;\n\nexport const Input = styled.input<InputProps>`\n  cursor: pointer;\n  opacity: 0;\n  height: 100%;\n  position: absolute;\n  width: 100%;\n  z-index: 3;\n\n  &:checked + ${Handle} {\n    left: ${getScale(\"checkedLeft\")};\n  }\n\n  &:focus + ${Handle} {\n    box-shadow: ${({ theme }) => theme.shadows.focus};\n  }\n\n  &:hover + ${Handle}:not(:disabled):not(:checked) {\n    box-shadow: ${({ theme }) => theme.shadows.focus};\n  }\n`;\n\nconst StyledToggle = styled.div<ToggleProps>`\n  align-items: center;\n  background-color: ${({ theme, checked }) => checked ? theme.colors[\"success\"] : theme.colors.backgroundDark };\n  border-radius: 24px;\n  // box-shadow: ${({ theme }) => theme.shadows.inset};\n  cursor: pointer;\n  display: inline-flex;\n  height: ${getScale(\"toggleHeight\")};\n  position: relative;\n  transition: background-color 200ms;\n  width: ${getScale(\"toggleWidth\")};\n`;\n\nexport default StyledToggle;\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAnBA;AACA;AA6BA;AACA;AACA;AAAA;AACA;AACA;AAHA;AACA;AAIA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAIA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}