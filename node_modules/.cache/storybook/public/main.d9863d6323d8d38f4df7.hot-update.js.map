{"version":3,"file":"main.d9863d6323d8d38f4df7.hot-update.js","sources":["webpack:///./src/components/Button/StyledButton.tsx"],"sourcesContent":["import styled, { DefaultTheme } from \"styled-components\";\nimport { space, layout, variant } from \"styled-system\";\nimport { scaleVariants, styleVariants } from \"./theme\";\nimport { BaseButtonProps } from \"./types\";\nimport {baseColors} from '../../theme/colors'\n\ninterface ThemedButtonProps extends BaseButtonProps {\n  theme: DefaultTheme;\n}\n\ninterface TransientButtonProps extends ThemedButtonProps {\n  $isLoading?: boolean;\n}\n\nconst getDisabledStyles = ({ $isLoading, theme }: TransientButtonProps) => {\n  if ($isLoading === true) {\n    return `\n      &:disabled,\n      &.pancake-button--disabled {\n        cursor: not-allowed;\n      }\n    `;\n  }\n\n  return `\n    &:disabled,\n    &.pancake-button--disabled {\n      background-color: ${theme.colors.backgroundDisabled};\n      border-color: ${theme.colors.backgroundDisabled};\n      transform: initial!important;\n      box-shadow: none!important;\n      > div {\n        color: ${theme.colors.textDisabled};\n      }\n      cursor: not-allowed;\n    }\n\n    &:disabled,\n    &.pancake-button--disabled, .pancake-button--disabled&:hover {\n      transform: initial!important;\n      box-shadow: none!important;\n      cursor: not-allowed;\n    }\n  `;\n};\n\n/**\n * This is to get around an issue where if you use a Link component\n * React will throw a invalid DOM attribute error\n * @see https://github.com/styled-components/styled-components/issues/135\n */\n\nconst getOpacity = ({ $isLoading }: TransientButtonProps) => {\n  return $isLoading ? \".5\" : \"1\";\n};\n\nconst StyledButton = styled.button<BaseButtonProps>`\n  align-items: center;\n  border: 0;\n  border-radius: .5rem;\n  cursor: pointer;\n  display: inline-flex;\n  font-family: inherit;\n  font-size: 16px;\n  font-weight: 600;\n  justify-content: center;\n  letter-spacing: 0.03em;\n  line-height: 1;\n  opacity: ${getOpacity};\n  outline: 0;\n  width: ${props => props.fullWidth ? '100%' : undefined};\n\n  ${getDisabledStyles}\n  ${variant({\n    prop: \"scale\",\n    variants: scaleVariants,\n  })}\n  ${variant({\n    variants: styleVariants,\n  })}\n\n\n  ${layout}\n  ${space}\n  ${(props) => props.isButtonMenu && props.isSelected && props.variant === 'primary' && `\n    :hover {\n      transform: none!important;\n      box-shadow: 0 .2rem 0 0 ${baseColors.primaryBorder}!important;\n    }\n\n    :focus {\n      transform: translateY(0rem);\n      box-shadow: 0 0rem 0 0 #c13da8!important  ;\n    }\n  `}\n  ${(props) => props.hideBorder && `\n    border: 0px;\n  `}\n\n`;\n\nexport default StyledButton;\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AASA;AAAA;AAAA;AACA;AAAA;AACA;AAMA;AACA;AACA;AAoBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAcA;AAAA;AAIA;AACA;AAFA;AAKA;AADA;AAOA;AAAA;AAWA;AAAA;AAMA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}