{"version":3,"file":"main.703b097bb964c5609fce.hot-update.js","sources":["webpack:///./src/widgets/Menu/Menu.tsx","webpack:///./src/widgets/Menu/components/SideBar.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport throttle from \"lodash/throttle\";\nimport Overlay from \"../../components/Overlay/Overlay\";\nimport Flex from \"../../components/Box/Flex\";\nimport { useMatchBreakpoints } from \"../../hooks\";\nimport Panel from \"./components/Panel\";\nimport Sidebar from \"./components/SideBar\";\n\nimport UserBlock from \"./components/UserBlock\";\nimport { NavProps } from \"./types\";\nimport Avatar from \"./components/Avatar\";\nimport { MENU_HEIGHT, SIDEBAR_WIDTH_REDUCED, SIDEBAR_WIDTH_FULL } from \"./config\";\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nconst StyledNav = styled.nav<{ showMenu: boolean }>`\n  position: fixed;\n  top: ${({ showMenu }) => (showMenu ? 0 : `-${MENU_HEIGHT}px`)};\n  left: 0;\n  transition: top 0.2s;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-left: 8px;\n  padding-right: 16px;\n  width: 100%;\n  height: ${MENU_HEIGHT}px;\n  background-color: ${({ theme }) => theme.nav.background};\n  border-bottom: solid 2px rgba(133, 133, 133, 0.1);\n  z-index: 20;\n  transform: translate3d(0, 0, 0);\n`;\n\nconst BodyWrapper = styled.div`\n  position: relative;\n  display: flex;\n`;\n\nconst Inner = styled.div<{ isPushed: boolean; showMenu: boolean }>`\n  flex-grow: 1;\n  margin-top: ${({ showMenu }) => (showMenu ? `0` : 0)};\n  transition: margin-top 0.2s, margin-left 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  transform: translate3d(0, 0, 0);\n  max-width: 100%;\n`;\n// ${({ theme }) => theme.mediaQueries.nav} {\n//   // margin-left: ${({ isPushed }) => `${isPushed ? SIDEBAR_WIDTH_FULL : SIDEBAR_WIDTH_REDUCED}px`};\n//   // max-width: ${({ isPushed }) => `calc(100% - ${isPushed ? SIDEBAR_WIDTH_FULL : SIDEBAR_WIDTH_REDUCED}px)`};\n// }\nconst MobileOnlyOverlay = styled(Overlay)`\n  position: fixed;\n  height: 100%;\n\n  ${({ theme }) => theme.mediaQueries.nav} {\n    display: none;\n  }\n`;\n\nconst Menu: React.FC<NavProps> = ({\n  account,\n  login,\n  logout,\n  isDark,\n  toggleTheme,\n  langs,\n  setLang,\n  currentLang,\n  cakePriceUsd,\n  links,\n  profile,\n  children,\n}) => {\n  const { isXl } = useMatchBreakpoints();\n  const isMobile = isXl === false;\n  const [isPushed, setIsPushed] = useState(!isMobile);\n  const [showMenu, setShowMenu] = useState(true);\n  const refPrevOffset = useRef(window.pageYOffset);\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentOffset = window.pageYOffset;\n      const isBottomOfPage = window.document.body.clientHeight === currentOffset + window.innerHeight;\n      const isTopOfPage = currentOffset === 0;\n      // Always show the menu when user reach the top\n      if (isTopOfPage) {\n        setShowMenu(true);\n      }\n      // Avoid triggering anything at the bottom because of layout shift\n      else if (!isBottomOfPage) {\n        if (currentOffset < refPrevOffset.current) {\n          // Has scroll up\n          setShowMenu(true);\n        } else {\n          // Has scroll down\n          setShowMenu(false);\n        }\n      }\n      refPrevOffset.current = currentOffset;\n    };\n    const throttledHandleScroll = throttle(handleScroll, 200);\n\n    window.addEventListener(\"scroll\", throttledHandleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", throttledHandleScroll);\n    };\n  }, []);\n\n  // Find the home link if provided\n  // <StyledNav showMenu={showMenu}>\n  //\n  //   <Flex>\n  //\n  //     {profile && <Avatar profile={profile} />}\n  //   </Flex>\n  // </StyledNav>\n  return (\n    <Wrapper>\n\n      <BodyWrapper>\n        <Sidebar\n        isPushed={isPushed}\n        isMobile={isMobile}\n        showMenu={showMenu}\n        isDark={isDark}\n        toggleTheme={toggleTheme}\n        langs={langs}\n        setLang={setLang}\n        currentLang={currentLang}\n        cakePriceUsd={cakePriceUsd}\n        pushNav={setIsPushed}\n        links={links}\n        userBlock={<UserBlock account={account} login={login} logout={logout} />}\n        />\n        <Panel\n          isPushed={isPushed}\n          isMobile={isMobile}\n          showMenu={showMenu}\n          isDark={isDark}\n          toggleTheme={toggleTheme}\n          langs={langs}\n          setLang={setLang}\n          currentLang={currentLang}\n          cakePriceUsd={cakePriceUsd}\n          pushNav={setIsPushed}\n          links={links}\n          userBlock={<UserBlock account={account} login={login} logout={logout} />}\n        />\n        <Inner isPushed={isPushed} showMenu={showMenu}>\n          {children}\n        </Inner>\n        <MobileOnlyOverlay show={isPushed} onClick={() => setIsPushed(false)} role=\"presentation\" />\n      </BodyWrapper>\n    </Wrapper>\n  );\n};\n\nexport default Menu;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PanelBody from \"./PanelBody\";\nimport PanelFooter from \"./PanelFooter\";\nimport PanelHeader from \"./PanelHeader\";\nimport { SIDEBAR_WIDTH_REDUCED, SIDEBAR_WIDTH_FULL } from \"../config\";\nimport { PanelProps, PushedProps } from \"../types\";\n\ninterface Props extends PanelProps, PushedProps {\n  showMenu: boolean;\n  isMobile: boolean;\n}\n\nconst StyledPanel = styled.div<{ isPushed: boolean; showMenu: boolean }>`\n  position: fixed;\n  padding-top: ${({ showMenu }) => (showMenu ? \"0\" : 0)};\n  background-color: ${({ theme }) => theme.nav.background};\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  flex-shrink: 0;\n  top: 0px;\n  left: 0px;\n  height: 100%;\n  width: 90%;\n  transition: padding-top 0.2s, width 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  z-index: 11;\n  overflow: ${({ isPushed }) => (isPushed ? \"initial\" : \"hidden\")};\n  transform: translate3d(0, 0, 0);\n  border-bottom: 2px solid rgba(133, 133, 133, 0.1);\n\n  ${({ isPushed }) => !isPushed && \"white-space: nowrap;\"};\n\n  ${({ theme }) => theme.mediaQueries.nav} {\n    // border-right: 2px solid rgba(133, 133, 133, 0.1);\n    // width: ${({ isPushed }) => `${isPushed ? SIDEBAR_WIDTH_FULL : SIDEBAR_WIDTH_REDUCED}px`};\n  }\n`;\n\n\n\nconst SideBar: React.FC<Props> = (props) => {\n  const { isPushed, showMenu, userBlock } = props;\n  console.log('Props', props)\n  return (\n    <StyledPanel isPushed={isPushed} showMenu={showMenu}>\n      <PanelHeader {...props}/>\n      <PanelBody {...props} />\n      <PanelFooter {...props} />\n    </StyledPanel>\n  );\n};\n\nexport default SideBar;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;;;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAUA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAIA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAZA;AAcA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhCA;AAFA;AAsCA;AACA;AAhGA;AAiGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChKA;AACA;AACA;AACA;AACA;AACA;;;AAQA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAYA;AAAA;AAAA;AAIA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AAXA;AAYA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}