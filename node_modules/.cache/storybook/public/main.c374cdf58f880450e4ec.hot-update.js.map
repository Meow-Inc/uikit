{"version":3,"file":"main.c374cdf58f880450e4ec.hot-update.js","sources":["webpack:///./src/components/ButtonMenu/ButtonMenu.tsx"],"sourcesContent":["import React, { cloneElement, Children, ReactElement } from \"react\";\nimport styled, { DefaultTheme } from \"styled-components\";\nimport { space } from \"styled-system\";\nimport { scales, variants } from \"../Button/types\";\nimport { ButtonMenuProps } from \"./types\";\n\ninterface StyledButtonMenuProps extends ButtonMenuProps {\n  theme: DefaultTheme;\n}\n\nconst getBackgroundColor = ({ theme, variant }: StyledButtonMenuProps) => {\n  return theme.colors[variant === variants.SUBTLE ? \"input\" : \"backgroundDark\"];\n};\n\nconst getBorderColor = ({ theme, variant }: StyledButtonMenuProps) => {\n  return theme.colors[variant === variants.SUBTLE ? \"inputSecondary\" : \"disabled\"];\n};\n\nconst StyledButtonMenu = styled.div<StyledButtonMenuProps>`\n  border-radius: 0.5rem;\n  background-color: ${getBackgroundColor};\n  border-bottom: 3px solid ${getBackgroundColor};\n\n  & > button + button,\n  & > a + a {\n    margin-left: 2px; // To avoid focus shadow overlap\n  }\n\n  ${space}\n`;\n\nconst ButtonMenu: React.FC<ButtonMenuProps> = ({\n  activeIndex = 0,\n  scale = scales.MD,\n  variant = variants.PRIMARY,\n  onItemClick,\n  children,\n  ...props\n}) => {\n  return (\n    <StyledButtonMenu variant={variant} {...props}>\n      {Children.map(children, (child: ReactElement, index) => {\n        return cloneElement(child, {\n          isActive: activeIndex === index,\n          isDisabled: activeIndex !== index,\n          onClick: onItemClick ? () => onItemClick(index) : undefined,\n          scale,\n          variant,\n          isSelected: activeIndex === index,\n          isButtonMenu: true,\n        });\n      })}\n    </StyledButtonMenu>\n  );\n};\n\nexport default ButtonMenu;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAYA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAPA;AASA;AAXA;AAcA;AACA;AAxBA;AAyBA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}