webpackHotUpdate("main",{

/***/ "./src/components/Toggle/StyledToggle.tsx":
/*!************************************************!*\
  !*** ./src/components/Toggle/StyledToggle.tsx ***!
  \************************************************/
/*! exports provided: Handle, Input, default */
/*! exports used: Handle, Input, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Handle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return Input; });
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! styled-components */ "../../node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _Checkbox_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Checkbox/types */ "./src/components/Checkbox/types.ts");


var scaleKeyValues = {
  sm: {
    handleHeight: "16px",
    handleWidth: "16px",
    handleLeft: "2px",
    handleTop: "2px",
    checkedLeft: "calc(100% - 18px)",
    toggleHeight: "20px",
    toggleWidth: "36px"
  },
  ms: {
    handleHeight: "24px",
    handleWidth: "24px",
    handleLeft: "2px",
    handleTop: "2px",
    checkedLeft: "calc(100% - 26px)",
    toggleHeight: "28px",
    toggleWidth: "50px"
  },
  md: {
    handleHeight: "32px",
    handleWidth: "32px",
    handleLeft: "4px",
    handleTop: "4px",
    checkedLeft: "calc(100% - 36px)",
    toggleHeight: "40px",
    toggleWidth: "72px"
  }
};

var getScale = function getScale(property) {
  return function (_ref) {
    var _ref$scale = _ref.scale,
        scale = _ref$scale === void 0 ? _Checkbox_types__WEBPACK_IMPORTED_MODULE_1__[/* scales */ "a"].MD : _ref$scale;
    return scaleKeyValues[scale][property];
  };
};

var Handle = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].div.withConfig({
  displayName: "StyledToggle__Handle",
  componentId: "sc-1xjfue2-0"
})(["background-color:#fff;border-radius:50%;cursor:pointer;height:", ";left:", ";position:absolute;top:", ";transition:left 200ms ease-in;width:", ";z-index:1;"], getScale("handleHeight"), getScale("handleLeft"), getScale("handleTop"), getScale("handleWidth"));
var Input = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].input.withConfig({
  displayName: "StyledToggle__Input",
  componentId: "sc-1xjfue2-1"
})(["cursor:pointer;opacity:0;height:100%;position:absolute;width:100%;z-index:3;&:checked + ", "{left:", ";}&:focus + ", "{box-shadow:", ";}&:hover + ", ":not(:disabled):not(:checked){box-shadow:", ";}"], Handle, getScale("checkedLeft"), Handle, function (_ref2) {
  var theme = _ref2.theme;
  return theme.shadows.focus;
}, Handle, function (_ref3) {
  var theme = _ref3.theme;
  return theme.shadows.focus;
});
var StyledToggle = styled_components__WEBPACK_IMPORTED_MODULE_0__["default"].div.withConfig({
  displayName: "StyledToggle",
  componentId: "sc-1xjfue2-2"
})(["align-items:center;background-color:", ";border-radius:24px;cursor:pointer;display:inline-flex;height:", ";position:relative;transition:background-color 200ms;width:", ";"], function (_ref4) {
  var theme = _ref4.theme,
      checked = _ref4.checked;
  return success ? theme.colors["success"] : theme.colors.backgroundDark;
}, getScale("toggleHeight"), getScale("toggleWidth"));
/* harmony default export */ __webpack_exports__["c"] = (StyledToggle);

try {
    // @ts-ignore
    Handle.displayName = "Handle";
    // @ts-ignore
    Handle.__docgenInfo = { "description": "", "displayName": "Handle", "props": { "ref": { "defaultValue": null, "description": "", "name": "ref", "required": false, "type": { "name": "((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null" } }, "scale": { "defaultValue": null, "description": "", "name": "scale", "required": true, "type": { "name": "enum", "value": [{ "value": "\"sm\"" }, { "value": "\"ms\"" }, { "value": "\"md\"" }] } }, "theme": { "defaultValue": null, "description": "", "name": "theme", "required": false, "type": { "name": "any" } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "undefined" } }, "forwardedAs": { "defaultValue": null, "description": "", "name": "forwardedAs", "required": false, "type": { "name": "undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/Toggle/StyledToggle.tsx#Handle"] = { docgenInfo: Handle.__docgenInfo, name: "Handle", path: "src/components/Toggle/StyledToggle.tsx#Handle" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    Input.displayName = "Input";
    // @ts-ignore
    Input.__docgenInfo = { "description": "", "displayName": "Input", "props": { "ref": { "defaultValue": null, "description": "", "name": "ref", "required": false, "type": { "name": "((instance: HTMLInputElement | null) => void) | RefObject<HTMLInputElement> | null" } }, "scale": { "defaultValue": null, "description": "", "name": "scale", "required": true, "type": { "name": "enum", "value": [{ "value": "\"sm\"" }, { "value": "\"ms\"" }, { "value": "\"md\"" }] } }, "theme": { "defaultValue": null, "description": "", "name": "theme", "required": false, "type": { "name": "any" } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "undefined" } }, "forwardedAs": { "defaultValue": null, "description": "", "name": "forwardedAs", "required": false, "type": { "name": "undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/Toggle/StyledToggle.tsx#Input"] = { docgenInfo: Input.__docgenInfo, name: "Input", path: "src/components/Toggle/StyledToggle.tsx#Input" };
}
catch (__react_docgen_typescript_loader_error) { }
try {
    // @ts-ignore
    StyledToggle.displayName = "StyledToggle";
    // @ts-ignore
    StyledToggle.__docgenInfo = { "description": "", "displayName": "StyledToggle", "props": { "ref": { "defaultValue": null, "description": "", "name": "ref", "required": false, "type": { "name": "((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null" } }, "scale": { "defaultValue": null, "description": "", "name": "scale", "required": false, "type": { "name": "enum", "value": [{ "value": "undefined" }, { "value": "\"sm\"" }, { "value": "\"ms\"" }, { "value": "\"md\"" }] } }, "checked": { "defaultValue": null, "description": "", "name": "checked", "required": false, "type": { "name": "boolean" } }, "theme": { "defaultValue": null, "description": "", "name": "theme", "required": false, "type": { "name": "any" } }, "as": { "defaultValue": null, "description": "", "name": "as", "required": false, "type": { "name": "undefined" } }, "forwardedAs": { "defaultValue": null, "description": "", "name": "forwardedAs", "required": false, "type": { "name": "undefined" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/components/Toggle/StyledToggle.tsx#StyledToggle"] = { docgenInfo: StyledToggle.__docgenInfo, name: "StyledToggle", path: "src/components/Toggle/StyledToggle.tsx#StyledToggle" };
}
catch (__react_docgen_typescript_loader_error) { }


/***/ })

})
//# sourceMappingURL=main.b0aad948fda3505ba054.hot-update.js.map