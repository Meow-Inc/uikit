{"version":3,"file":"main.796b07649d1380080923.hot-update.js","sources":["webpack:///./src/widgets/Menu/components/SideBar.tsx","webpack:///./src/widgets/Menu/components/SidebarBody.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport PanelBody from \"./PanelBody\";\nimport PanelFooter from \"./PanelFooter\";\nimport PanelHeader from \"./PanelHeader\";\nimport SidebarBody from './SidebarBody'\nimport { SIDEBAR_WIDTH_REDUCED, SIDEBAR_WIDTH_FULL } from \"../config\";\nimport { PanelProps, PushedProps } from \"../types\";\n\ninterface Props extends PanelProps, PushedProps {\n  showMenu: boolean;\n  isMobile: boolean;\n  isSidebar: boolean;\n}\n\nconst StyledPanel = styled.div<{ isPushed: boolean; showMenu: boolean }>`\n  position: fixed;\n  padding-top: ${({ showMenu }) => (showMenu ? \"0\" : 0)};\n  background-color: ${({ theme }) => theme.nav.background};\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-shrink: 0;\n  top: 71px;\n  left: 0px;\n  height: 100%;\n  width: 220px;\n  transition: padding-top 0.2s, width 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  z-index: 11;\n  overflow: ${({ isPushed }) => (isPushed ? \"initial\" : \"hidden\")};\n  transform: translate3d(0, 0, 0);\n  border-bottom: 2px solid rgba(133, 133, 133, 0.1);\n\n  ${({ isPushed }) => !isPushed && \"white-space: nowrap;\"};\n\n  ${({ theme }) => theme.mediaQueries.nav} {\n    // border-right: 2px solid rgba(133, 133, 133, 0.1);\n    // width: ${({ isPushed }) => `${isPushed ? SIDEBAR_WIDTH_FULL : SIDEBAR_WIDTH_REDUCED}px`};\n  }\n`;\n\n\n\nconst SideBar: React.FC<Props> = (props) => {\n  const { isPushed, showMenu, userBlock } = props;\n  console.log('Props', props)\n  return (\n    <StyledPanel isPushed={isPushed} showMenu={showMenu}>\n      <SidebarBody {...props} />\n      <PanelFooter {...props} />\n    </StyledPanel>\n  );\n};\n\nexport default SideBar;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useLocation } from \"react-router-dom\";\nimport { SvgProps } from \"../../../components/Svg\";\nimport * as IconModule from \"../icons\";\nimport Dropdown from \"./Dropdown\";\nimport { MenuEntry, LinkLabel, LinkStatus } from \"./MenuEntry\";\nimport MenuLink from \"./MenuLink\";\nimport { PanelProps, PushedProps } from \"../types\";\n\ninterface Props extends PanelProps, PushedProps {\n  isMobile: boolean;\n}\n\nconst Icons = IconModule as unknown as { [key: string]: React.FC<SvgProps> };\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  align-items: center;\n  max-width: 1166px;\n`;\n\nconst PanelBody: React.FC<Props> = ({ isPushed, pushNav, isMobile, links }) => {\n  const location = useLocation();\n  // Close the menu when a user clicks a link on mobile\n  const handleClick = isMobile ? () => pushNav(false) : undefined;\n  return (\n    <Container>\n\n      {links.map((entry) => {\n        const Icon = Icons[entry.icon];\n        const iconElement = <Icon width=\"24px\" mr=\"8px\" />;\n        const calloutClass = entry.calloutClass ? entry.calloutClass : undefined;\n\n        if (entry.items) {\n          const itemsMatchIndex = entry.items.findIndex((item) => item.href === location.pathname);\n          const initialOpenState = entry.initialOpenState === true ? entry.initialOpenState : itemsMatchIndex >= 0;\n\n          return (\n            <Dropdown\n              key={entry.label}\n              isPushed={isPushed}\n              pushNav={pushNav}\n              icon={iconElement}\n              label={entry.label}\n              status={entry.status}\n              initialOpenState={initialOpenState}\n              className={calloutClass}\n              isActive={entry.items.some((item) => item.href === location.pathname)}\n            >\n              {isPushed &&\n                entry.items.map((item) => (\n                  <MenuEntry key={item.href} secondary isActive={item.href === location.pathname} onClick={handleClick} isMobile={isMobile}>\n                    <MenuLink href={item.href}>\n                      <LinkLabel isPushed={isPushed}>{item.label}</LinkLabel>\n                      {item.status && (\n                        <LinkStatus color={item.status.color} fontSize=\"14px\">\n                          {item.status.text}\n                        </LinkStatus>\n                      )}\n                    </MenuLink>\n                  </MenuEntry>\n                ))}\n            </Dropdown>\n          );\n        }\n        return (\n          <MenuEntry key={entry.label} isActive={entry.href === location.pathname} className={calloutClass} isMobile={isMobile}>\n            <MenuLink href={entry.href} onClick={handleClick}>\n              {iconElement}\n              <LinkLabel isPushed={isPushed}>{entry.label}</LinkLabel>\n              {entry.status && (\n                <LinkStatus color={entry.status.color} fontSize=\"14px\">\n                  {entry.status.text}\n                </LinkStatus>\n              )}\n            </MenuLink>\n          </MenuEntry>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default PanelBody;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;;;AASA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAYA;AAAA;AAAA;AAIA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AAVA;AAWA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxDA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAOA;AAEA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AATA;AAYA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAHA;AADA;AADA;AAZA;AA0BA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAJA;AADA;AAYA;AApDA;AAuDA;AACA;AA7DA;AA8DA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}